module test_mo_percentile
  
  use funit
  use mo_kind,        only: dp, sp, i4
  use mo_percentile,  only: median, percentile, qmedian, n_element
  use mo_orderpack,   only: sort
  use mo_utils,       only: eq, ne
  use mo_message, only: error_message

  implicit none

contains

  ! Double precision
  @test
  subroutine test_percentile_dp()

    real(dp), dimension(10) :: dat
    real(dp), dimension(2)  :: dqua
  
    dat = (/ 1., 2., 3., 4., 5., 6., 7., 8., 9., 10. /)
    @assertEqual(median(dat), 5.5_dp)
    @assertEqual(qmedian(dat), 5.5_dp)
    @assertEqual(median(dat,mask=ne(dat,10._dp)), 5._dp)
    @assertEqual(n_element(dat,4), 4._dp)
    @assertEqual(percentile(dat,95._dp), 10._dp)
    dqua = percentile(dat,(/50._dp, 95._dp/))
    @assertEqual(dqua(1), 5._dp)
    @assertEqual(dqua(2), 10._dp)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=1_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=3_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=4_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=5_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=6_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=7_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=8_i4)
    dqua = percentile(dat,(/50._dp,75._dp/), mode_in=2_i4)
    @assertEqual(dqua(1), 5._dp)
    @assertEqual(dqua(2), 7.5_dp)

  end subroutine test_percentile_dp

  ! Single precision
  @test
  subroutine test_percentile_sp()

    real(sp), dimension(10) :: sat
    real(sp), dimension(2)  :: squa
  
    sat = (/ 1., 2., 3., 4., 5., 6., 7., 8., 9., 10. /)
    @assertEqual(median(sat), 5.5_sp)
    @assertEqual(qmedian(sat), 5.5_dp)
    @assertEqual(median(sat,mask=ne(sat,10._sp)), 5._sp)
    @assertEqual(n_element(sat,4), 4._sp)
    @assertEqual(percentile(sat,95._sp), 10._sp)
    squa = percentile(sat,(/50._sp, 95._sp/))
    @assertEqual(squa(1), 5._sp)
    @assertEqual(squa(2), 10._sp)
    squa = percentile(sat,(/50._sp,75._sp/), mode_in=2_i4)
    @assertEqual(squa(1), 5._sp)
    @assertEqual(squa(2), 7.5_sp)

  end subroutine test_percentile_sp
  
end module test_mo_percentile